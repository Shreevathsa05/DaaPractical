# Time: Avg O(n log n), Worst O(n^2), Space: O(log n) recursion

# Quicksort as last element pivot
def partition(arr,start,end):
    idx=start-1
    pivot=arr[end]
    for i in range(start,end):
        if(arr[i]<pivot):
            idx+=1
            # swap the elements
            temp=arr[i]
            arr[i]=arr[idx]
            arr[idx]=temp
    idx+=1
# swap the elements
    temp=arr[end]
    arr[end]=arr[idx]
    arr[idx]=temp
    return idx

def quicksort(arr,start,end):
    if(start<end):
        pivot=partition(arr,start,end)
        quicksort(arr,start,pivot-1)
        quicksort(arr,pivot+1,end)
    return arr



# main function
array = list(map(int, input("Enter array elements: ").split()))
print("Unsorted array: ", array)
arr=quicksort(array,0,len(array)-1)
print("Sorted array: ", arr)
