import heapq
def dijkstra(graph, start):
    distances={node:999 for node in graph}
    distances[start]=0
    queue=[(0,start)]

    while queue:
        current_distance, current_node=heapq.heappop(queue)
        if (current_distance > distances[current_node]):
            continue
        for neighbor,wt in graph[current_node].items():
            new_dist=wt+current_distance
            if(new_dist < distances[neighbor]):
                distances[neighbor] = new_dist
            heapq.heappush(queue,(new_dist,neighbor))
    return distances

graph={
    'A':{'B':2, 'C':3},'B':{'C':1},'C':{}
}
start=input("Start node  ")
res=dijkstra(graph, start)
print(res)
